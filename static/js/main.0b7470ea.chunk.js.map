{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","modifiedData","console","log","fetchDailyData","map","dailydata","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b7470ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","\nimport React from 'react';\n\nimport {Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n\n    if (!confirmed){\n        return 'Loading...';\n    }\n    return (\n        <div className = {styles.container}>\n            <Grid container spacing={3} justify = 'center'>\n                <Grid item component = {Card} xs= {12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color ='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography varaint='h5'>\n                        <CountUp \n                            start = {0}\n                            end = {confirmed.value}\n                            duration = {2}\n                            separator =\",\"\n                        />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varaint='body'>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography varaint='h5'>\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varaint='body'>Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography varaint='h5'>\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2}\n                                separator=\",\"\n                            />\n                        </Typography><Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varaint='body'>Number of Deaths by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) => {\n    let changeableURL = url;\n\n    if (country) {\n        changeableURL = `${url}/countries/${country}`\n    }\n\n    try{\n        const { data : {confirmed,recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\n        \n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\n        return modifiedData\n\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () =>{\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailydata) => ({\n            confirmed: dailydata.confirmed.total,\n            deaths: dailydata.deaths.total,\n            date: dailydata.reportDate,\n            recovered: dailydata.recovered.total,\n        }));\n        return modifiedData\n    } catch (error){\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: { countries }} = await axios.get(`${url}/countries`)\n        return countries.map((country) => country.name)\n    } catch (error){\n        console.log(error);\n    }\n}","import React, {useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api'\nimport { Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data : {confirmed,deaths,recovered}, country}) => {\n    const[dailyData,setDailyData] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () =>{\n            setDailyData( await fetchDailyData());\n        }\n        //console.log(dailyData)\n        fetchAPI();\n    },[]);\n    const lineChart = (\n        dailyData.length ? (    // 0            -> false\n                                // 1 2 15 200   -> true \n        <Line \n        data = {{\n            labels: dailyData.map(({ date })=> date),\n            datasets: [{\n                data: dailyData.map(({confirmed}) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                backgroundColor: 'rgba(0, 0, 255, 0.05)',\n                fill: true,\n            },{\n                data: dailyData.map(({ deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }] \n        }}/>) :null\n    );\n    \n    const barChart = (\n        confirmed \n        ? (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\n                        data: [confirmed.value,recovered.value,deaths.value]\n                    }]\n                }}\n                option = {{\n                    legend: {display: false},\n                    title: {display: true, text:`Current state in ${country}`},\n                }}\n            />\n        ): null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;\n","import React, {useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries (await fetchCountries());\n        }\n        fetchAPI() \n    },[setFetchedCountries]);\n\n\n    return (\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue='' onChange={(e)=> handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;\n","import React from 'react';\n\nimport { Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async(country) => {\n        \n        const fetchedData = await fetchData(country)\n        this.setState({ data: fetchedData, country: country });\n    }\n\n    render(){\n        const { data, country } = this.state;\n\n        return(\n            <div className={styles.container}>\n                <img className= {styles.image} src={coronaImage} alt=\"COVID-19\"></img>\n                <Cards data = {data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.6d26bf24.png\";"],"sourceRoot":""}